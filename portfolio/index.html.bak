<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Portfolio</title>
    <link rel="stylesheet" type="text/css" href="css/style.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>


    <header id="sticky-header" class="header">
	
        <nav>
           <div class="topnav" id="myTopnav">
                <ul>
                    <li><a href="#home" class="btn active">Home</a></li><a href="javascript:void(0);" class="icon" onclick="myFunction()">
    <i class="fa fa-bars"></i>
  </a>
        
                    <li><a href="#about" class="btn">About</a></li>
                    <li><a href="#skills" class="btn">Skills</a></li>
                    <li><a href="#certification" class="btn">Certification</a></li>
                    <li><a href="#projects" class="btn">Projects</a></li>
                    <li><a href="#contact" class="btn">Contact</a></li>
                </ul>
				    </div>
        </nav>
		
    </header>

 <script>
        // Get the header element
        const header = document.getElementById("sticky-header");

        // Get the initial offset position of the header
        const headerOffset = header.offsetTop;

        // Function to make the header sticky
        function makeHeaderSticky() {
            if (window.pageYOffset > headerOffset) {
                header.style.position = "fixed";
                header.style.top = "0";
            } else {
                header.style.position = "static";
            }
        }

        // Attach an event listener to the window to call the function on scroll
        window.addEventListener("scroll", makeHeaderSticky);
		
function myFunction() {
  var x = document.getElementById("myTopnav");
  if (x.className === "topnav") {
    x.className += " responsive";
  } else {
    x.className = "topnav";
  }
}
</script>
 <script>
        // Add active class to the current button (highlight it)
        var btns = document.querySelectorAll(".btn");
        btns.forEach(function(btn) {
            btn.addEventListener("click", function() {
                var current = document.querySelector(".btn.active");
                if (current) {
                    current.classList.remove("active");
                }
                this.classList.add("active");
            });
        });
    </script>
    

    <section id="home" class="section">
        <div class="container">
            <div class="left">
			<div >
			    <h3>Hello,It's Me</h3>
				<h2 style="color:white;margin:0px;">Thirumullai</h2>
				<p style="font-size: 1.17em;">I am a <span id="domainDisplay" style="color:#0ef;"></span></p><br><br>
				<a href="https://www.linkedin.com/in/thirumullai-t-848a6421a"><i class="fa-brands fa-linkedin" ></i></a>
				<a href="mailto:thirumullaivalluvan@gmail.com"><i class="fa-regular fa-envelope"></i></a>
				<i class="fa-brands fa-github"></i>
				<br><br>
                 <a href="#" class="glow-button">Resume</a> 
                </div>
            </div>
            <div class="right">
               <img src="images/PIC.gif" alt="Your Photo" class="circle ">
            </div>
        </div>
    </section>

     <section class="about" id="about">
	 <div class="icon-heading" style="text-align:center;">
               <i class="fa-solid fa-user"></i>
                <h1>About Me</h1>
           </div>

        <div class="container">
		
            <div class="left">
              <img src="images/pen.gif" alt="Your Photo" class="circles ">  </div>
            <div class="right" >
			   <p style="color:white;text-align:justify;" class="about-paragraph">I have a strong foundation of programming languages like C, Java, and Python, as well as web technologies including HTML, CSS, PHP, JavaScript, jQuery, and React js. I'm experienced in managing databases with MySQL and proficient in using design tools like Canva and Figma, as well as development tools like Visual Studio Code. I'm also skilled in Microsoft Office applications such as Excel, Word, and PowerPoint. My passion lies in machine learning and I'm always eager to learn and adapt to new technologies.</p>
        
            </div>
			
        </div>
		</section>
		<script>
	
	 document.addEventListener('DOMContentLoaded', function() {
            const aboutSection = document.querySelector('.about');
            const aboutParagraph = document.querySelector('.about-paragraph');
            let loaded = false;

            const observer = new IntersectionObserver(entries => {
                if (entries[0].isIntersecting && !loaded) {
                    aboutParagraph.style.transform = 'translateX(0)';
                    loaded = true;
                    observer.disconnect();
                }
            });

            observer.observe(aboutSection);
        });
</script>

    <section id="skills" class="section">
	<div class="icon-heading" style="text-align:center;margin-top:100px;">
               <i class="fa-solid fa-laptop-code"></i>
                <h1>Skills</h1>
           </div>
       <div class="container">
        <div class="skillsection" id="html-section">
            <h2>HTML</h2>
            
			<div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-html" cx="60" cy="60" r="54" style="fill: none; stroke:  #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-html" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-html" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const htmlCircle = document.querySelector(".progress-ring-html");
                const htmlText = document.querySelector(".progress-percent-html");

                function setProgressHTML(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    htmlCircle.style.strokeDashoffset = offset;
                    htmlText.textContent = `${percent}%`;
                }

                function autoStartProgressHTML() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 70) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressHTML(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressHTML);
            </script>
        </div>
        <div class="skillsection" id="css-section">
            <h2>CSS</h2>
          
			 <div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-css" cx="60" cy="60" r="54" style="fill: none; stroke:  #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-css" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-css" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const cssCircle = document.querySelector(".progress-ring-css");
                const cssText = document.querySelector(".progress-percent-css");

                function setProgressCSS(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    cssCircle.style.strokeDashoffset = offset;
                    cssText.textContent = `${percent}%`;
                }

                function autoStartProgressCSS() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 70) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressCSS(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressCSS);
            </script>
      
        </div>
        <div class="skillsection" id="js-section">
            <h2>JAVASCRIPT</h2>
            <div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-js" cx="60" cy="60" r="54" style="fill: none; stroke: #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-js" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-js" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const jsCircle = document.querySelector(".progress-ring-js");
                const jsText = document.querySelector(".progress-percent-js");

                function setProgressJS(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    jsCircle.style.strokeDashoffset = offset;
                    jsText.textContent = `${percent}%`;
                }

                function autoStartProgressJS() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 50) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressJS(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressJS);
            </script>
    </div>
	</section>
	<section style="margin:-67px;" id="skills" class="section">
	<div class="container">
        <div class="skillsection" id="html-section">
            <h2>JQUERY</h2>
            
			<div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-jq" cx="60" cy="60" r="54" style="fill: none; stroke:  #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-jq" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-jq" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const jqCircle = document.querySelector(".progress-ring-jq");
                const jqText = document.querySelector(".progress-percent-jq");

                function setProgressjq(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    jqCircle.style.strokeDashoffset = offset;
                    jqText.textContent = `${percent}%`;
                }

                function autoStartProgressjq() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 50) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressjq(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressjq);
            </script>
        </div>
        <div class="skillsection" id="css-section">
            <h2>PHP</h2>
          
			 <div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-php" cx="60" cy="60" r="54" style="fill: none; stroke:  #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-php" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-php"style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const phpCircle = document.querySelector(".progress-ring-php");
                const phpText = document.querySelector(".progress-percent-php");

                function setProgressphp(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    phpCircle.style.strokeDashoffset = offset;
                    phpText.textContent = `${percent}%`;
                }

                function autoStartProgressphp() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 50) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressphp(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressphp);
            </script>
      
        </div>
        <div class="skillsection" id="js-section">
            <h2>MYSQL</h2>
            <div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-mysql" cx="60" cy="60" r="54" style="fill: none; stroke: #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-mysql" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-mysql" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const mysqlCircle = document.querySelector(".progress-ring-mysql");
                const mysqlText = document.querySelector(".progress-percent-mysql");

                function setProgressmysql(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    mysqlCircle.style.strokeDashoffset = offset;
                    mysqlText.textContent = `${percent}%`;
                }

                function autoStartProgressmysql() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 50) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressmysql(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressmysql);
            </script>
    </div>
    </section>
	<section id="skills" class="section" style="margin:-67px;">
       <div class="container">
        <div class="skillsection" id="html-section">
            <h2>REACT JS</h2>
            
			<div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-react" cx="60" cy="60" r="54" style="fill: none; stroke: #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-react" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-react" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const reactCircle = document.querySelector(".progress-ring-react");
                const reactText = document.querySelector(".progress-percent-react");

                function setProgressreact(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    reactCircle.style.strokeDashoffset = offset;
                    reactText.textContent = `${percent}%`;
                }

                function autoStartProgressreact() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 50) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressreact(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressreact);
            </script>
        </div>
        <div class="skillsection" id="css-section">
            <h2>C</h2>
          
			 <div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-c" cx="60" cy="60" r="54" style="fill: none; stroke:  #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-c" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-c" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const cCircle = document.querySelector(".progress-ring-c");
                const cText = document.querySelector(".progress-percent-c");

                function setProgressc(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    cCircle.style.strokeDashoffset = offset;
                    cText.textContent = `${percent}%`;
                }

                function autoStartProgressc() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 70) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressc(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressc);
            </script>
      
        </div>
		<div class="skillsection" id="css-section">
            <h2>JAVA AND PYTHON</h2>
          
			 <div style="position: relative; align-items: center;">
                <svg width="120" height="120">
                    <!-- Border Circle -->
                    <circle cx="60" cy="60" r="54" style="fill: none; stroke: #ccc; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 0;"></circle>
                    <!-- Progress Circle -->
                    <circle class="progress-ring-jp" cx="60" cy="60" r="54" style="fill: none; stroke: #0ef; stroke-width: 10; stroke-dasharray: 339.292; stroke-dashoffset: 339.292; transition: stroke-dashoffset 1s;"></circle>
                </svg>
                <div class="progress-text-jp" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: flex; align-items: center; justify-content: center; font-size: 24px; font-weight: bold; color: #333;">
                    <span class="progress-percent-jp" style="color:white;">0%</span>
                </div>
            </div>
            <script>
                const jpCircle = document.querySelector(".progress-ring-jp");
                const jpText = document.querySelector(".progress-percent-jp");

                function setProgressjp(percent) {
                    const offset = 339.292 - (3.39292 * percent);
                    jpCircle.style.strokeDashoffset = offset;
                    jpText.textContent = `${percent}%`;
                }

                function autoStartProgressjp() {
                    let percent = 0;
                    const interval = setInterval(() => {
                        if (percent < 50) {  // Change 50 to the desired initial percentage
                            percent++;
                            setProgressjp(percent);
                        } else {
                            clearInterval(interval);
                        }
                    }, 20);  // Change 20 to adjust the animation speed
                }

                window.addEventListener("load", autoStartProgressjp);
            </script>
      
        </div>
		</section>

    <section id="certification" class="section">
	<div class="icon-heading" style="text-align:center;margin-top:100px;">
          
                <h1>Certificates</h1>
           </div>
        <div class="container">
            
        <div class="certificate">
            <h2>C</h2>
            <p>i have earned NPTEL certificate for programming in C</p><br><br>
			<a href="#" class="glow-button" id= "showImage">Certificate</a> 
    <script>
      
document.getElementById('showImage').addEventListener('click', function() {
    // Create a new window or tab to display the image
    var newWindow = window.open('', '', 'width=400,height=400');
    
    // Specify the URL of the image you want to display
    var imageUrl = 'images/c.jpg';

    // Create an image element and set its source attribute
    var imageElement = document.createElement('img');
    imageElement.src = imageUrl;
	imageElement.width = 400; 
	imageElement.height = 400;

    // Append the image element to the new window's document
    newWindow.document.body.appendChild(imageElement);
});
</script>
        </div>
		
        <div class="certificate">
            <h2>JAVA</h2>
            <p>i have earned NPTEL certificate for programming in Java</p><br><br>
			<a href="#" class="glow-button" id= "image">Certificate</a> 
			<script>
      
document.getElementById('image').addEventListener('click', function() {
    // Create a new window or tab to display the image
    var newWindow = window.open('', '', 'width=400,height=400');
    
    // Specify the URL of the image you want to display
    var imageUrl = 'images/java.jpg';

    // Create an image element and set its source attribute
    var imageElement = document.createElement('img');
    imageElement.src = imageUrl;
	imageElement.width = 400; 
	imageElement.height = 400;

    // Append the image element to the new window's document
    newWindow.document.body.appendChild(imageElement);
});
      </script>
        </div>
		  <div class="certificate">
            <h2>ML</h2>
            <p>i have earned NPTEL certificate for ML</p><br><br>
			<a href="#" class="glow-button" id= "show">Certificate</a> 
			 <script>
      
document.getElementById('show').addEventListener('click', function() {
    // Create a new window or tab to display the image
    var newWindow = window.open('', '', 'width=400,height=400');
    
    // Specify the URL of the image you want to display
    var imageUrl = 'images/m.jpg';

    // Create an image element and set its source attribute
    var imageElement = document.createElement('img');
    imageElement.src = imageUrl;
	imageElement.width = 400; 
	imageElement.height = 400; 

    // Append the image element to the new window's document
    newWindow.document.body.appendChild(imageElement);
});
</script>
        </div>
   
            <!-- Add content for the Certification section -->
        </div>
    </section>

    <section id="projects" class="section">
	<div class="icon-heading" style="text-align:center;margin-top:100px;">
               
                <h1>Projects</h1>
           </div>
        <div class="container">
               
        <div class="project" >
           <img src="images/web.jpg" alt="Your Photo" class="pro" >
		    <div class="caption">I have successfully completed the web development project on <b>Online Hospital Management System </b></div>
    
        </div>
        <div class="project" >
           <img src="images/ml.jpg" alt="Your Photo"  class="pro" >
			 <div class="caption">I have successfully completed the ML project for<b> OnlineDisease Prediction System</b></div>
        </div> 
        <div class="project">
            <img src="images/ui.jpg" alt="Your Photo" class="pro" >
			 <div class="caption">Designed and prototyped the user interface for <b>Food Ordering App</b></div>
        </div>
        </div>
    </section>

    <section id="contact" class="section">
        <div >
            <h2>Contact Me</h2>
            <!-- Add content for the Contact section -->
			<form method="post" action="process_form.php" class="containers">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" placeholder="Your Name" required>

            <label for="phone">Phone:</label>
            <input type="tel" id="phone" name="phone" placeholder="Your Phone" required>

            <label for="message">Message:</label>
            <textarea id="message" name="message" rows="4" placeholder="Your Message" required></textarea>

            <input type="submit" value="Submit" >
        </form>
        </div>
    </section>

    <footer>
        <div  style="text-align:center;" >
            <p style="padding:10px 30px ;"><b>Thank You For Visiting My Portfolio</b></p>
        </div>
    </footer>
	<script>
	

        const domains = ["Web Developer", "C Developer", "UI Designer"];
        const domainDisplay = document.getElementById("domainDisplay");
        
        let currentIndex = 0;
        
        function displayNextDomain() {
            domainDisplay.textContent = domains[currentIndex];
            currentIndex = (currentIndex + 1) % domains.length;
        }
        
        // Display the first domain immediately
        displayNextDomain();
        
        // Set an interval to display domains one by one
        setInterval(displayNextDomain, 2000); // Change the time interval (in milliseconds) as per your preference
    </script>
	
</body>
</html>
